#version: '3.8'

services:
  database:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: taskmanager
      POSTGRES_DB: taskmanager
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/database.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d taskmanager"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    networks:
      - backend

  backend:
    build: ./tmbackend
    container_name: backend_service
    depends_on:
      database:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/taskmanager
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: taskmanager
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    ports:
      - "8080:8080"
    networks:
      backend:
      frontend:

  frontend:
    build: ./tmfrontend
    ports:
      - "4200:4200"
    container_name: frontend_service
    depends_on:
      - backend
    volumes:
      - ./tmfrontend:/app
      - /app/node_modules
    restart: always
    networks:
      - frontend

volumes:
  postgres_data:
networks:
  frontend:
  backend:
